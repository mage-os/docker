#!/bin/sh

set -e

startAll=$(date +%s)

. .env

magentoInstall() {
  php -d memory_limit=-1 bin/magento setup:install --base-url=http://"$1"/ \
    --db-host=/run/mysqld/mysqld.sock --db-name="$MYSQL_DATABASE" --db-user=root --db-password="$MYSQL_ROOT_PASSWORD" \
    --backend-frontname=admin --admin-lastname="$ADMIN_NAME" --admin-firstname="$ADMIN_SURNAME" \
    --admin-email="$ADMIN_EMAIL" --admin-user="$ADMIN_USER" --admin-password="$ADMIN_PASS" \
    --page-cache=redis --page-cache-redis-server=/run/redis.sock --page-cache-redis-db=0 \
    --cache-backend=redis --cache-backend-redis-server=/run/redis.sock --cache-backend-redis-db=1 \
    --session-save=redis --session-save-redis-host=/run/redis.sock --session-save-redis-persistent-id=sess-db2 --session-save-redis-db=2 \
    --search-engine=elasticsearch7 --elasticsearch-host=127.0.0.1 --elasticsearch-port=9200 \
    --cleanup-database --use-sample-data
}

setPerformanceVars() {
  bin/magento config:set catalog/search/enable_eav_indexer 1 &&
    bin/magento config:set dev/template/minify_html 1 &&
    bin/magento config:set dev/js/merge_files 1 &&
    bin/magento config:set dev/js/enable_js_bundling 1 &&
    bin/magento config:set dev/js/minify_files 1 &&
    bin/magento config:set dev/js/move_script_to_bottom 1 &&
    bin/magento config:set dev/css/merge_css_files 1 &&
    bin/magento config:set dev/css/minify_files 1 &&
    bin/magento config:set web/seo/use_rewrites 1 &&
    bin/magento config:set web/url/redirect_to_base 0 &&
    bin/magento config:set web/secure/use_in_frontend 0 &&
    bin/magento config:set web/secure/use_in_adminhtml 0
}

showSuccess() {

  echo "


Backend:\

http://$1/admin\

User: mage2_admin\

Password: mage2_admin123#T\


Frontend:\

http://$1

"

}

getComposer() {
  curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer &&
    chmod +x -R /usr/local/bin/
}

getComposerPackages() {
  composer create-project --no-dev --remove-vcs --ignore-platform-reqs \
    --repository-url=https://mirror.mage-os.org/ magento/project-community-edition:"${MAGENTO_VERSION}" .
  composer req --ignore-platform-reqs magepal/magento2-gmailsmtpapp yireo/magento2-webp2 dominicwatts/cachewarmer \
    magento/module-bundle-sample-data magento/module-catalog-rule-sample-data magento/module-catalog-sample-data \
    magento/module-cms-sample-data magento/module-configurable-sample-data magento/module-customer-sample-data \
    magento/module-downloadable-sample-data magento/module-grouped-product-sample-data magento/module-msrp-sample-data \
    magento/module-offline-shipping-sample-data magento/module-product-links-sample-data magento/module-review-sample-data \
    magento/module-sales-rule-sample-data magento/module-sales-sample-data magento/module-swatches-sample-data \
    magento/module-tax-sample-data magento/module-theme-sample-data magento/module-widget-sample-data \
    magento/module-wishlist-sample-data magento/sample-data-media
}

startServer() {
  php -S "$1":80 -t ./pub/ ./phpserver/router.php -c /usr/local/etc/php/conf.d/php-ini-overrides.ini
}

if [ ! -f "$WORKDIR_SERVER/app/etc/env.php" ]; then

  if [ -f "$WORKDIR_SERVER/composer.json" ]; then
    sleep 15
  else
    getComposer
    getComposerPackages
  fi

  magentoInstall "$(hostname -i)"
  setPerformanceVars
  bin/magento module:disable -c Magento_TwoFactorAuth
  bin/magento module:enable Yireo_Webp2 Yireo_NextGenImages
  bin/magento cron:install
  bin/magento ind:rei
  bin/magento cache:flush
  bin/magento deploy:mode:set production
fi

bin/magento config:set web/unsecure/base_url "http://$(hostname -i)/"
showSuccess "$(hostname -i)"
endAll=$(date +%s)
echo "Setup Time: $((endAll - startAll)) Sec"
startServer "$(hostname -i)"
